# this is for the logic in the dbmanager

import psycopg2

from datetime import datetime
time = str(datetime.now())

filename = '/var/log/dbmanager.log'

def writeTarget(string):
    target = open(filename, 'a')
    target.write(time+": "+string+"\n")
    target.close()

def rollback():
    cur.execute("rollback")
    string = "Something went wrong. ROLLBACK."
    writeTarget(string)

def showDatabases():
    try:
        cur.execute("begin")
        getDatabases = cur.execute("select datname from pg_database where datistemplate is False")
        databases = cur.fetchall()
        cur.execute("commit")
        infoField = textFieldInfo.get(1.0, 'end-1c')
        if infoField == "":
            for x in databases:
                x = x[0]+str("\n")
                textFieldInfo.insert(END, x)
        else:
            textFieldInfo.delete(1.0, END)
            for x in databases:
                x = x[0]+str("\n")
                textFieldInfo.insert(END, x)
    except:
        rollback()

def showUsers():
    try:
        cur.execute("begin")
        getUsernames = cur.execute("select usename from pg_user")
        users = cur.fetchall()
        cur.execute("commit")
        infoField = textFieldInfo.get(1.0, 'end-1c')
        if infoField == "":
            for x in users:
                x = x[0]+str("\n")
                textFieldInfo.insert(END, x)
        else:
            textFieldInfo.delete(1.0, END)
            for x in users:
                x = x[0]+str("\n")
                textFieldInfo.insert(END, x)
    except:
        rollback()

def showTables():
    databasename = tab1DBName.get()
    user = tab1UserName.get()
    infoField = textFieldInfo.get(1.0, 'end-1c')
    try:
        cur.execute("begin")
        getTablenames = cur.execute("select tablename from pg_tables where pg_tables.tableowner like '%"+user+"'")
        tables = cur.fetchall()
        cur.execute("commit")
        if infoField == "":
            for x in tables:
                x = x[0]+str("\n")
                textFieldInfo.insert(END, x)
        else:
            textFieldInfo.delete(1.0, END)
            for x in tables:
                x = x[0] + str("\n")
                textFieldInfo.insert(END, x)
    except:
        rollback()

def showColumns():
    tablename = tab7TableName.get()
    tablename2 = tab2TableName.get()
    infoField = textFieldInfo.get(1.0, 'end-1c')
    if infoField != "" and tablename == "Tabellenname":
        textFieldInfo.delete(1.0, END)
        textFieldInfo.insert(END, "Enter table name first")
    elif infoField == "Enter table name first" or (tablename != "" or tablename != "Tabellenname"):
        textFieldInfo.delete(1.0, END)
        try:
            cur.execute("begin")
            getTablenames = cur.execute("select column_name from information_schema.columns where table_name like '"+tablename+"'")
            columns = cur.fetchall()
            cur.execute("commit")
            for x in columns:
                x = x[0]+str("\n")
                textFieldInfo.insert(END, x)
        except:
            rollback()
    else:
        rollback()
